#
# CKAN - Pylons configuration
#
# These are some of the configuration options available for your CKAN
# instance. Check the documentation in 'doc/configuration.rst' or at the
# following URL for a description of what they do and the full list of
# available options:
#
# https://docs.ckan.org/en/latest/maintaining/configuration.html
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]

# WARNING: *THIS SETTING MUST BE SET TO FALSE ON A PRODUCTION ENVIRONMENT*
debug = true

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8080

[app:main]
use = egg:ckan

ckanext.datajson.inventory_links_enabled = True
ckanext.datajson.export_map_filename = export.inventory.map.sample.json
ckanext.datajson.url_enabled = False

## Session settings
# cache_dir = /tmp/%(ckan.site_id)s/
beaker.session.key = ckan

# This is the secret token that the beaker library uses to hash the cookie sent
# to the client. `ckan generate config` generates a unique value for this each
# time it generates a config file.
beaker.session.secret = forFlaskDebugToolbar

beaker.session.type=ext:database
beaker.session.cookie_expires=true
beaker.session.url = $CKAN___BEAKER__SESSION__URL
beaker.session.timeout=900
beaker.session.lock_dir=/var/tmp/ckan/lock

# `paster make-config` generates a unique value for this each time it generates
# a config file.
app_instance_uuid = cf314c1a-1672-4451-9cb8-250629d6fdea

# repoze.who config
who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = stdout
# 15 minutes to match beaker.session.timeout
who.timeout = 900
# who.httponly = True # DEFAULT True already
who.secure = True

## Database Settings
#sqlalchemy.url = $CKAN_SQLALCHEMY_URL

# Xloader Settings
# ckanext.xloader.jobs_db.uri = postgresql://datastore:pass@localhost/datastore
ckanext.xloader.formats = csv application/csv xls xlsx application/vnd.ms-excel
# The maximum size of files to load into DataStore. In bytes. Default is 1 GB.
ckanext.xloader.max_content_length = 1000000000
# To always use messytables to load data, instead of attempting a direct
# PostgreSQL COPY, set this to True. This more closely matches the
# DataPusher's behavior. It has the advantage that the column types
# are guessed. However it is more error prone, far slower and you can't run
# the CPU-intensive queue on a separate machine.
ckanext.xloader.just_load_with_messytables = False
# The maximum time for the loading of a resource before it is aborted.
# Give an amount in seconds. Default is 60 minutes
ckanext.xloader.job_timeout = 3600
# Ignore the file hash when submitting to the DataStore, if set to True
# resources are always submitted (if their format matches), if set to
# False (default), resources are only submitted if their hash has changed.
ckanext.xloader.ignore_hash = False
# When loading a file that is bigger than `max_content_length`, xloader can
# still try and load some of the file, which is useful to display a
# preview. Set this option to the desired number of lines/rows that it
# loads in this case.
# If the file-type is supported (CSV, TSV) an excerpt with the number of
# `max_excerpt_lines` lines will be submitted while the `max_content_length`
# is not exceeded.
# If set to 0 (default) files that exceed the `max_content_length` will
# not be loaded into the datastore.
ckanext.xloader.max_excerpt_lines = 100 


#ckan.datastore.write_url = $CKAN_DATASTORE_WRITE_URL
#ckan.datastore.read_url = $CKAN_DATASTORE_READ_URL

# PostgreSQL' full-text search parameters
ckan.datastore.default_fts_lang = english
ckan.datastore.default_fts_index_method = gist

## Site Settings
# external url no trailing slash
#ckan.site_url = $CKAN_SITE_URL

## Authorization Settings

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = false
ckan.auth.user_create_organizations = false
ckan.auth.user_delete_groups = false
ckan.auth.user_delete_organizations = false
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = false
ckan.auth.roles_that_cascade_to_sub_groups = admin
ckan.auth.public_user_details = false

## Search Settings
#ckan.site_id = $CKAN_SITE_ID
#solr_url = $CKAN_SOLR_URL

#ckan.simple_search = 1

## Redis Settings
#ckan.redis.url = $CKAN_REDIS_URL

## CORS Settings

# Basically Access-Control-Allow-Origin is set to ‘*’
# comment out and uncomment below for whitelist
#ckan.cors.origin_allow_all = True

# For domain whitelist comment above
ckan.cors.origin_allow_all = False
ckan.cors.origin_whitelist = https://gsa.gov https://www.gsa.gov

## Plugins Settings

# Note: Add ``datastore`` to enable the CKAN DataStore
#       Add ``pdf_preview`` to enable the resource preview for PDFs
#		Add ``resource_proxy`` to enable resorce proxying and get around the
#		same origin policy

# Put envvars last per envvars doc, https://github.com/okfn/ckanext-envvars#requirements
ckan.plugins = datagov_inventory datastore xloader stats text_view recline_view googleanalyticsbasic s3filestore dcat_usmetadata usmetadata datajson saml2auth envvars

ckan.views.default_views = recline_view text_view image_view webpage_view recline_grid_view

## Front-End Settings
ckan.site_title = Inventory
ckan.site_logo = /base/images/ckan-logo.png
ckan.site_description =
ckan.favicon = /images/icons/ckan.ico
ckan.gravatar_default = identicon
ckan.preview.direct = png jpg gif
ckan.preview.loadable = html htm rdf+xml owl+xml xml n3 n-triples turtle plain atom csv tsv rss txt json

# package_hide_extras = for_search_index_only
#package_edit_return_url = http://another.frontend/dataset/<NAME>
#package_new_return_url = http://another.frontend/dataset/<NAME>
#ckan.recaptcha.publickey =
#ckan.recaptcha.privatekey =
#licenses_group_url = http://licenses.opendefinition.org/licenses/groups/ckan.json
# ckan.template_footer_end =


## Internationalisation Settings
ckan.locale_default = en
ckan.locale_order = en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered =
ckan.locales_filtered_out = en_GB

## SAML2auth Settings
#ckanext.saml2auth.key_file_path = $CKANEXT__SAML2AUTH__KEY_FILE_PATH
#ckanext.saml2auth.cert_file_path = $CKANEXT__SAML2AUTH__CERT_FILE_PATH

# TODO fetch and verify remote metadata https://github.com/GSA/datagov-deploy/issues/2860
ckanext.saml2auth.idp_metadata.location=local
#ckanext.saml2auth.idp_metadata.local_path = $CKANEXT__SAML2AUTH__IDP_METADATA__LOCAL_PATH

ckanext.saml2auth.user_firstname=first_name
ckanext.saml2auth.user_lastname=last_name
ckanext.saml2auth.user_email=email
ckanext.saml2auth.allow_unknown_attributes=true
ckanext.saml2auth.sp.name_id_format=urn:oasis:names:tc:saml:2.0:nameid-format:persistent urn:oasis:names:tc:saml:2.0:nameid-format:transient n:oasis:names:tc:saml:2.0:nameid-format:emailaddress
#ckanext.saml2auth.entity_id = $CKANEXT__SAML2AUTH__ENTITY_ID
ckanext.saml2auth.want_response_signed=false
ckanext.saml2auth.want_assertions_signed=false
ckanext.saml2auth.want_assertions_or_response_signed=true
ckanext.saml2auth.enable_ckan_internal_login=false
ckanext.saml2auth.requested_authn_context = http://idmanagement.gov/ns/assurance/aal/3?hspd12=true

## Feeds Settings

ckan.feeds.authority_name =
ckan.feeds.date =
ckan.feeds.author_name =
ckan.feeds.author_link =

## Storage Settings

#ckan.storage_path = /var/lib/ckan
#ckan.max_resource_size = 10
#ckan.max_image_size = 2

# Resource Proxy settings
# Preview size limit, default: 1MB
#ckan.resource_proxy.max_file_size = 1048576
# Size of chunks to read/write.
#ckan.resource_proxy.chunk_size = 4096

# The maximum content size, in bytes, for uploads
ckan.storage.max_content_length = 536870912
#ckan.storage_path = CKAN_STORAGE_PATH

#ckanext.s3filestore.aws_access_key_id = $CKANEXT__S3FILESTORE__AWS_ACCESS_KEY_ID
#ckanext.s3filestore.aws_bucket_name = $CKANEXT__S3FILESTORE__AWS_BUCKET_NAME
#ckanext.s3filestore.aws_secret_access_key = $CKANEXT__S3FILESTORE__AWS_SECRET_ACCESS_KEY
#ckanext.s3filestore.host_name = $CKANEXT__S3FILESTORE__HOST_NAME
#ckanext.s3filestore.region_name = $CKANEXT__S3FILESTORE__REGION_NAME
ckanext.s3filestore.aws_storage_path = datagov/inventory-next/
ckanext.s3filestore.signature_version = s3v4

#ckan.max_resource_size = 650
#ckan.max_image_size = 2
#ckan.resource_formats =/home/vcap/app/src/ckanext-usmetadata/ckanext/usmetadata/resource_formats.json

## Activity Streams Settings

#ckan.activity_streams_enabled = true
#ckan.activity_list_limit = 31
#ckan.activity_streams_email_notifications = true
# ckan.email_notifications_since = 2 days


## Email settings

# TODO https://github.com/GSA/datagov-deploy/issues/2321
email_to = you@yourdomain.com
error_email_from = paste@localhost
smtp.server = localhost
smtp.starttls = False
#smtp.user = your_username@gmail.com
#smtp.password = your_password
#smtp.mail_from =
error_message = Server Error - Refresh the Page: An internal server error occurred. Try refreshing the page by pressing F5 or Ctrl+F5.

## googleanalyticsbasic, to be configurable https://github.com/GSA/datagov-deploy/issues/2790
googleanalytics.ids = UA-42145528-2 UA-17367410-17

## Logging configuration
[loggers]
keys = root, ckan, ckanext, datajson

[handlers]
keys = console, consoleerror

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, consoleerror

[logger_ckan]
level = INFO
handlers = console, consoleerror
qualname = ckan
propagate = 0

[logger_ckanext]
level = DEBUG
handlers = console, consoleerror
qualname = ckanext
propagate = 0

[logger_datajson]
level = DEBUG
handlers = console, consoleerror
qualname = datajson
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[handler_consoleerror]
class = StreamHandler
args = (sys.stderr,)
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
