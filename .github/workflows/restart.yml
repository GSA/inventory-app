---
name: restart application

on:
  pull_request:
  # schedule:
  #   - cron: '7/15 * * * *'

jobs:
  restart-staging:
    name: restart (staging)
    environment: staging
    runs-on: ubuntu-latest
    env:
      APP_URL: https://inventory-stage-datagov.app.cloud.gov
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: fail
        run: exit 1
      # - name: restart
      #   uses: usds/cloud-gov-cli@master
      #   with:
      #     command: restart inventory --strategy rolling
      #     org: gsa-datagov
      #     space: staging
      #     user: ${{secrets.CF_SERVICE_USER}}
      #     password: ${{secrets.CF_SERVICE_AUTH}}
      # - name: smoke test
      #   run: bin/smoke.sh
  
  restart-prod:
    name: restart (prod)
    environment: production
    runs-on: ubuntu-latest
    env:
      APP_URL: https://inventory-prod-datagov.app.cloud.gov
    steps:
      - name: checkout
        uses: actions/checkout@v2
      # - name: restart
      #   uses: usds/cloud-gov-cli@master
      #   with:
      #     command: restart inventory --strategy rolling
      #     org: gsa-datagov
      #     space: prod
      #     user: ${{secrets.CF_SERVICE_USER}}
      #     password: ${{secrets.CF_SERVICE_AUTH}}
      # - name: smoke test
      #   run: bin/smoke.sh

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs:
      - restart-staging
      - restart-prod
    if: always()
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: JasonEtco/create-an-issue@v2
        if: ${{ needs.restart-staging.result == 'failure' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          update_existing: true
          filename: .github/ISSUE_TEMPLATE/restart_issue.md